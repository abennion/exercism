var _exercism$xelm$Series$sliceBy = F2(
	function (n, xs) {
		return (_elm_lang$core$Native_Utils.cmp(
			n,
			_elm_lang$core$List$length(xs)) > 0) ? _elm_lang$core$Native_List.fromArray(
			[]) : A2(
			_elm_lang$core$List_ops['::'],
			A2(_elm_lang$core$List$take, n, xs),
			A2(
				_exercism$xelm$Series$sliceBy,
				n,
				A2(_elm_lang$core$List$drop, 1, xs)));
	});
var _exercism$xelm$Series$slices = F2(
	function (n, str) {
		return _elm_lang$core$Native_Utils.eq(n, 0) ? _elm_lang$core$Result$Err('Invalid size: 0') : A2(
			_elm_lang$core$Result$map,
			_exercism$xelm$Series$sliceBy(n),
			A3(
				_elm_lang$core$List$foldr,
				_elm_lang$core$Result$map2(
					F2(
						function (x, y) {
							return A2(_elm_lang$core$List_ops['::'], x, y);
						})),
				_elm_lang$core$Result$Ok(
					_elm_lang$core$Native_List.fromArray(
						[])),
				A2(
					_elm_lang$core$List$map,
					_elm_lang$core$String$toInt,
					A2(_elm_lang$core$String$split, '', str))));
	});
