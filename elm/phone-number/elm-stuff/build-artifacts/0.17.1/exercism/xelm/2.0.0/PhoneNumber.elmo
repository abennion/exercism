var _exercism$xelm$PhoneNumber$validate = function (_p0) {
	var _p1 = _p0;
	var _p3 = _p1._0;
	var _p2 = _p1._1;
	return _elm_lang$core$Native_Utils.eq(_p2, 10) ? _elm_lang$core$Maybe$Just(_p3) : ((_elm_lang$core$Native_Utils.eq(_p2, 11) && A2(_elm_lang$core$String$startsWith, '1', _p3)) ? _elm_lang$core$Maybe$Just(
		A2(_elm_lang$core$String$dropLeft, 1, _p3)) : _elm_lang$core$Maybe$Nothing);
};
var _exercism$xelm$PhoneNumber$getNumber = function (number) {
	return _exercism$xelm$PhoneNumber$validate(
		function (s) {
			return {
				ctor: '_Tuple2',
				_0: s,
				_1: _elm_lang$core$String$length(s)
			};
		}(
			A2(_elm_lang$core$String$filter, _elm_lang$core$Char$isDigit, number)));
};
var _exercism$xelm$PhoneNumber$prettyPrint = function (number) {
	var _p4 = _exercism$xelm$PhoneNumber$getNumber(number);
	if (_p4.ctor === 'Just') {
		var _p5 = _p4._0;
		return _elm_lang$core$Maybe$Just(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'(',
				A2(
					_elm_lang$core$Basics_ops['++'],
					A3(_elm_lang$core$String$slice, 0, 3, _p5),
					A2(
						_elm_lang$core$Basics_ops['++'],
						') ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							A3(_elm_lang$core$String$slice, 3, 6, _p5),
							A2(
								_elm_lang$core$Basics_ops['++'],
								'-',
								A3(_elm_lang$core$String$slice, 6, 10, _p5)))))));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
